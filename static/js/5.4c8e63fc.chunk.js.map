{"version":3,"sources":["hoc/withAuthRedirect.jsx","components/Profile/ProfileInfo/ProfileInfo.module.scss","components/Profile/MyPosts/MyPosts.module.scss","components/Profile/MyPosts/Post/Post.module.scss","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.module.scss","assets/image/noAvatar.jpg","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPostsForm/MyPostsForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHook.jsx","components/Profile/ProfileInfo/Contact/Contact.jsx","components/Profile/ProfileInfo/ProfileInfoForm/ProfileInfoForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","Post","actions","liked","key","title","createElement","DislikeFilled","LikeOutlined","onClick","toggleLikePost","id","className","likeCount","DislikeOutlined","deletePost","style","post","author","name","avatar","size","shape","src","alt","content","message","maxLength250","maxLength","maxLength60","Textarea","createFormElement","Input","reduxForm","form","onSubmit","handleSubmit","Field","component","placeholder","validate","requiredField","type","htmlType","MyPosts","formData","addPost","v4","postText","contentNewPosts","posts","map","profilePage","ProfileStatusWithHook","useState","editMode","setEditMode","status","setStatus","useEffect","statusInput","autoFocus","onChange","e","currentTarget","value","onBlur","updateStatus","Contact","contactName","contactValue","maxLength200","profileInfo","profileInfoName","Object","keys","profile","contacts","editModeBtn","error","ProfileInfo","Preloader","profileDesc","profileAvatar","photos","large","noAvatar","avatarImage","isOwner","target","files","length","updatePhoto","uploadPhoto","for","initialValues","updateProfile","then","fullName","profileInfoStatus","lookingForAJob","lookingForAJobDescription","aboutMe","Profile","owner","MyPostsContainer","compose","authorizedUserId","userId","getUsersProfile","getStatus","withRouter","match","params"],"mappings":"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","file":"static/js/5.4c8e63fc.chunk.js","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render(){\r\n            if (!this.props.isAuth) return <Redirect to=\"/login\" />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    const connectedRedirectComponent = connect(mapStateToProps)(RedirectComponent);\r\n    return connectedRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileDesc\":\"ProfileInfo_profileDesc__5go6G\",\"profileAvatar\":\"ProfileInfo_profileAvatar__4Raf9\",\"avatarImage\":\"ProfileInfo_avatarImage__14ppm\",\"uploadPhoto\":\"ProfileInfo_uploadPhoto__2hZ6K\",\"editModeBtn\":\"ProfileInfo_editModeBtn__F_nnL\",\"profileInfo\":\"ProfileInfo_profileInfo__1kdLq\",\"profileInfoName\":\"ProfileInfo_profileInfoName__jnOEh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MyPosts\":\"MyPosts_MyPosts__1o1s0\",\"contentNewPosts\":\"MyPosts_contentNewPosts__lkcTq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__2msS2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statusInput\":\"ProfileStatus_statusInput__2m2EC\"};","module.exports = __webpack_public_path__ + \"static/media/noAvatar.c44864fc.jpg\";","import React from 'react';\r\nimport style from './Post.module.scss'\r\nimport { Tooltip, Comment, Avatar } from 'antd';\r\nimport { DislikeOutlined, LikeOutlined, DislikeFilled} from '@ant-design/icons';\r\n\r\nconst Post = (props) => {\r\n    const actions = [\r\n        props.liked ?\r\n            <span key=\"comment-basic-like\">\r\n                <Tooltip title=\"Like\">\r\n                    {React.createElement(props.liked === true ? DislikeFilled : LikeOutlined, {\r\n                        onClick: () => props.toggleLikePost(props.id)\r\n                    })}\r\n                </Tooltip>\r\n                <span className=\"comment-action\">{props.likeCount}</span>\r\n            </span>\r\n            :\r\n            <span key=' key=\"comment-basic-dislike\"'>\r\n                <Tooltip title=\"Dislike\">\r\n                    {React.createElement(\r\n                        props.liked === false || props.liked === null ? LikeOutlined : DislikeOutlined,\r\n                        {\r\n                            onClick: () => props.toggleLikePost(props.id)\r\n                        }\r\n                    )}\r\n                </Tooltip>\r\n                <span className=\"comment-action\">{props.likeCount}</span>\r\n            </span>,\r\n        <span onClick={() => props.deletePost(props.id)}>удалить пост</span>\r\n    ];\r\n    return (\r\n        <Comment className={style.post}\r\n            author={<a>{props.name}</a>}\r\n            actions={actions}\r\n            avatar={\r\n                <Avatar\r\n                    size={\"large\"}\r\n                    shape=\"circle\"\r\n                    src={props.avatar ? props.avatar : \"https://www.kino-teatr.ru/movie/kadr/36398/pv_82319.jpg\"}\r\n                    alt=\"Han Solo\"\r\n                />} \r\n            content={<p>{props.message}</p>} />\r\n    );\r\n}\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLength, requiredField } from '../../../../utils/validate/validateForm';\r\nimport createFormElement from '../../../../hoc/createFormElement/createFormElement';\r\nimport { Button } from 'antd';\r\n\r\nconst maxLength250 = maxLength(250);\r\nconst maxLength60 = maxLength(60);\r\nconst Textarea = createFormElement(\"textarea\");\r\nconst Input = createFormElement(\"input\");\r\n\r\nconst MyPostsForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name={\"postText\"} placeholder=\"Эта стена ждет твоего поста!\" validate={[requiredField, maxLength250]} />\r\n            </div>\r\n            <div>\r\n                <Field component={Input} name={\"name\"} placeholder=\"Имя..\" validate={[requiredField, maxLength60]} />\r\n            </div>\r\n            <div>\r\n                <Button type=\"primary\" htmlType=\"submit\">Отправить</Button>\r\n            </div>\r\n        </form>\r\n\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    // a unique name for the form\r\n    form: 'MyPosts'\r\n})(MyPostsForm)","import React from 'react';\r\nimport style from './MyPosts.module.scss';\r\nimport Post from './Post/Post';\r\nimport MyPostsForm from './MyPostsForm/MyPostsForm';\r\n\r\nimport {v4} from 'uuid';\r\n\r\nconst MyPosts = (props) => {\r\n\r\n    const addPost = (formData) => {\r\n        props.addPost(v4(),formData.postText,0,null,formData.name);\r\n    }\r\n\r\n    return (\r\n        <div className={style.MyPosts}>\r\n            <h2>My posts</h2>\r\n            <MyPostsForm onSubmit={addPost} />\r\n            <div className={style.contentNewPosts}>\r\n                    {\r\n                        props.posts.map(post => <Post {...post} toggleLikePost={props.toggleLikePost} \r\n                            deletePost={props.deletePost} key={post.id}  />)\r\n                    }\r\n                </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyPosts;","import MyPosts from './MyPosts';\r\nimport {addPost,deletePost,toggleLikePost} from './../../../redux/profile-reducer';\r\nimport {connect} from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,{addPost,deletePost,toggleLikePost})(MyPosts);","import React, {useState, useEffect} from 'react';\r\nimport style from './ProfileStatus.module.scss';\r\n\r\nconst ProfileStatusWithHook = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status,setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status] );\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onChangeStatus = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {(!editMode) ?\r\n                <div>\r\n                    <span onClick={activateEditMode}>{status || \"----\"}</span>\r\n                </div>\r\n                :\r\n                <div>\r\n                    <input className={style.statusInput} autoFocus={true} onChange={onChangeStatus} onBlur={deactivateEditMode} value={status} />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHook;","import React from 'react';\r\n\r\nconst Contact = ({ contactName, contactValue }) => {\r\n    return (\r\n        <li>{contactName}: {contactValue}</li>\r\n    )\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport createFormElement from '../../../../hoc/createFormElement/createFormElement';\r\nimport { maxLength } from '../../../../utils/validate/validateForm';\r\nimport style from './../ProfileInfo.module.scss';\r\nimport { Button } from 'antd';\r\n\r\nconst maxLength200 = maxLength(200);\r\nconst Input = createFormElement(\"input\");\r\n\r\nconst ProfileInfoForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n                <div className={style.profileInfo}>\r\n                    <div className={style.profileInfoName}>Мое имя: <Field name=\"fullName\" placeholder=\"Имя\" type=\"text\" component={Input} validate={[maxLength200]} /></div>\r\n                    <div>Ищу работу: <Field name=\"lookingForAJob\" type=\"checkbox\" component={Input} validate={[maxLength200]} /> </div>\r\n                    <div>Мои навыки: <Field name=\"lookingForAJobDescription\" placeholder=\"Мои навыки\" type=\"text\" component={Input} validate={[maxLength200]} /> </div>\r\n                    <div>Обо мне: <Field name=\"aboutMe\" placeholder=\"Обо мне\" type=\"text\" component={Input} validate={[maxLength200]} /></div>\r\n                    <ul>\r\n                        {Object.keys(props.profile.contacts).map(key => {\r\n                            return <Field name={\"contacts.\" + key} key={key} placeholder={key} type=\"text\" component={Input} validate={[maxLength200]} />\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n                <Button htmlType=\"submit\" className={style.editModeBtn}>Сохранить страницу</Button>\r\n            <div>\r\n                {props.error ? props.error : null}\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    // a unique name for the form\r\n    form: 'profileInfoForm'\r\n})(ProfileInfoForm);","import React from 'react';\r\nimport style from './ProfileInfo.module.scss';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileStatusWithHook from './ProfileStatus/ProfileStatusWithHook';\r\nimport Contact from './Contact/Contact';\r\nimport ProfileInfoForm from './ProfileInfoForm/ProfileInfoForm';\r\nimport { useState } from 'react';\r\nimport noAvatar from '../../../assets/image/noAvatar.jpg';\r\nimport { Button } from 'antd';\r\n\r\nconst ProfileInfo = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n    const onSubmit = (formData) => {\r\n        props.updateProfile(formData).then(\r\n            () => {\r\n                setEditMode(false);\r\n            }\r\n        )\r\n    }\r\n    const onChangePhoto = (e) => {\r\n        if (e.target.files.length) {\r\n            props.updatePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n    return (\r\n            <div className={style.profileDesc}>\r\n                <div className={style.profileAvatar}>\r\n                    <img src={props.profile.photos.large ? props.profile.photos.large : noAvatar} className={style.avatarImage} />\r\n                    {props.isOwner ? <div>\r\n                        <input type=\"file\" id=\"photoFile\" onChange={onChangePhoto} className={style.uploadPhoto} />\r\n                        <label for=\"photoFile\">Изменить аватарку</label>\r\n                    </div> : ''}\r\n                </div>\r\n                {editMode ?\r\n                    <ProfileInfoForm initialValues={props.profile} onSubmit={onSubmit} profile={props.profile} />\r\n                    :\r\n                    <div className={style.profileInfo}>\r\n                        <div className={style.profileInfoName}>{props.profile.fullName}</div>\r\n                        <div className={style.profileInfoStatus}><ProfileStatusWithHook status={props.status} updateStatus={props.updateStatus} /></div>\r\n                        <div>Ищу работу: {props.profile.lookingForAJob ? \"Да\" : \"Нет\"} </div>\r\n                        <div>Мои навыки: {props.profile.lookingForAJobDescription} </div>\r\n                        <div>Обо мне: {props.profile.aboutMe}</div>\r\n                        <ul>\r\n                            {Object.keys(props.profile.contacts).map(key => {\r\n                                return <Contact key={key} contactName={key} contactValue={props.profile.contacts[key]} />\r\n                            })}\r\n                        </ul>\r\n                    </div>\r\n                }\r\n                {(props.isOwner && !editMode) &&\r\n                    <Button className={style.editModeBtn} onClick={() => setEditMode(true)}>Редактировать страницу</Button>\r\n                }\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nconst Profile = (props) => {\r\n    \r\n    return (\r\n        <div>\r\n            <ProfileInfo updatePhoto={props.updatePhoto} isOwner={props.owner} updateProfile={props.updateProfile}\r\n            profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n            <MyPostsContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { getUsersProfile, updateStatus, getStatus, updatePhoto, updateProfile } from './../../redux/profile-reducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { useEffect } from 'react';\r\n\r\nconst ProfileContainer = (props) => {\r\n    const updateProfile = () => {\r\n        let userId = props.match.params.userId;\r\n\r\n        if (!userId) {\r\n            userId = props.authorizedUserId;\r\n        }\r\n        props.getUsersProfile(userId);\r\n        props.getStatus(userId);\r\n    }\r\n    \r\n    useEffect(() => {\r\n        updateProfile()\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        updateProfile()\r\n    }, [props.match.params.userId]);\r\n\r\n    return (\r\n        <Profile {...props} updatePhoto={props.updatePhoto} owner={!props.match.params.userId}\r\n        profile={props.profile} status={props.status} updateStatus={props.updateStatus} updateProfile={props.updateProfile} />\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUsersProfile, getStatus, updateStatus, updatePhoto, updateProfile }),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer);"],"sourceRoot":""}